.row
  .col-24
    .card.shadowed
      .statistics
        - [:working, :queued, :complete, :failed].each do |state|
          .stat
            strong
              = @stats.find{|stat| stat[:status] === state.to_s }.try(:[], :count) || 0
            = t state, scope: :'jobs_dashboard.statuses'

.row.mt-2
  .col-12
    .card.shadowed
      .card-title
        => t :'jobs_dashboard.statuses.working'
        - if @ongoing_jobs.count > 0
          |(#{@ongoing_jobs.count})
      .card-content
        - if @ongoing_jobs.any?
          ul.item-list
            - @ongoing_jobs.limit(10).each do |job|
              = render partial: 'job_row', locals: { job: job }
        - else
          small.text-muted
            = t :'jobs_dashboard.sentences.no_ongoing_jobs'
  .col-12
    .card.shadowed
      .card-title
        => t :'jobs_dashboard.statuses.queued'
        - if @awaiting_jobs.count > 0
          |(#{@awaiting_jobs.count})
      .card-content
        - if @awaiting_jobs.any?
          ul.item-list
            - @awaiting_jobs.limit(10).each do |job|
              = render partial: 'job_row', locals: { job: job }
        - else
          small.text-muted
            = t :'jobs_dashboard.sentences.no_awaiting_jobs'
